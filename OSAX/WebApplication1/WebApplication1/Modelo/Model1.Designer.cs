//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadatos de relaciones en EDM

[assembly: EdmRelationshipAttribute("Model1", "ComunidadActor", "Comunidad", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.Comunidad), "Actor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Actor))]
[assembly: EdmRelationshipAttribute("Model1", "ActividadesDeLaComunidad", "Actividad", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Actividad), "Comunidad", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplication1.Modelo.Comunidad))]
[assembly: EdmRelationshipAttribute("Model1", "MetaDelObjetivo", "Meta", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.Meta), "Objetivo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Objetivo), true)]
[assembly: EdmRelationshipAttribute("Model1", "ObjetivoDeLaTarea", "Objetivo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.Objetivo), "Tarea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Tarea), true)]
[assembly: EdmRelationshipAttribute("Model1", "CategoriaDeLaTarea", "Categoria", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.Categoria), "Tarea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Tarea), true)]
[assembly: EdmRelationshipAttribute("Model1", "ObjetosEnLaTarea", "Objeto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Objeto), "Tarea", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.Tarea))]
[assembly: EdmRelationshipAttribute("Model1", "MetaDeLaActividad", "Meta", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.Meta), "Actividad", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.Actividad))]
[assembly: EdmRelationshipAttribute("Model1", "ComunidadActor1", "Comunidad1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaComunidad), "Actor1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.InstanciaActor))]
[assembly: EdmRelationshipAttribute("Model1", "CategoriaDelActor1", "Categoria1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaCategoria), "Actor1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.InstanciaActor), true)]
[assembly: EdmRelationshipAttribute("Model1", "ActividadesDeLaComunidad1", "Actividad1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.InstanciaActividad), "Comunidad1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplication1.Modelo.InstanciaComunidad))]
[assembly: EdmRelationshipAttribute("Model1", "MetaDelObjetivo1", "Meta1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaMeta), "Objetivo1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.InstanciaObjetivo), true)]
[assembly: EdmRelationshipAttribute("Model1", "ObjetivoDeLaTarea1", "Objetivo1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaObjetivo), "Tarea1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.InstanciaTarea), true)]
[assembly: EdmRelationshipAttribute("Model1", "CategoriaDeLaTarea1", "Categoria1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaCategoria), "Tarea1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.InstanciaTarea), true)]
[assembly: EdmRelationshipAttribute("Model1", "CategoriaDelObjeto1", "Categoria1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaCategoria), "Objeto1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.InstanciaObjeto), true)]
[assembly: EdmRelationshipAttribute("Model1", "ObjetosEnLaTarea1", "Objeto1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.InstanciaObjeto), "Tarea1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaTarea))]
[assembly: EdmRelationshipAttribute("Model1", "RolActorDeLaTarea1", "RolActor1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaRolActor), "Tarea1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaTarea))]
[assembly: EdmRelationshipAttribute("Model1", "RolObjetoDeLaTarea1", "RolObjeto1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplication1.Modelo.InstanciaRolObjeto), "Tarea1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaTarea))]
[assembly: EdmRelationshipAttribute("Model1", "MetaDeLaActividad1", "Meta1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaMeta), "Actividad1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaActividad))]
[assembly: EdmRelationshipAttribute("Model1", "InstanciaActividadInstanciaActor", "InstanciaActividad", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.InstanciaActividad), "InstanciaActor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.InstanciaActor), true)]
[assembly: EdmRelationshipAttribute("Model1", "CategoriadeObjeto", "Categoria", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.Categoria), "Objeto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Objeto), true)]
[assembly: EdmRelationshipAttribute("Model1", "CategoriadeActor", "Categoria", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.Categoria), "Actor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Actor), true)]
[assembly: EdmRelationshipAttribute("Model1", "ActividaddeActor", "Actividad", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.Actividad), "Actor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Actor), true)]
[assembly: EdmRelationshipAttribute("Model1", "RolObjetodeTarea", "RolObjeto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.RolObjeto), "Tarea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Tarea), true)]
[assembly: EdmRelationshipAttribute("Model1", "RolActordeTarea", "RolActor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication1.Modelo.RolActor), "Tarea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication1.Modelo.Tarea), true)]

#endregion

namespace WebApplication1.Modelo
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto Model1Container usando la cadena de conexión encontrada en la sección 'Model1Container' del archivo de configuración de la aplicación.
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto Model1Container.
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto Model1Container.
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Comunidad> Comunidades
        {
            get
            {
                if ((_Comunidades == null))
                {
                    _Comunidades = base.CreateObjectSet<Comunidad>("Comunidades");
                }
                return _Comunidades;
            }
        }
        private ObjectSet<Comunidad> _Comunidades;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Actor> Actores
        {
            get
            {
                if ((_Actores == null))
                {
                    _Actores = base.CreateObjectSet<Actor>("Actores");
                }
                return _Actores;
            }
        }
        private ObjectSet<Actor> _Actores;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<RolActor> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<RolActor>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<RolActor> _Roles;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Regla> Reglas
        {
            get
            {
                if ((_Reglas == null))
                {
                    _Reglas = base.CreateObjectSet<Regla>("Reglas");
                }
                return _Reglas;
            }
        }
        private ObjectSet<Regla> _Reglas;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Objeto> Objetos
        {
            get
            {
                if ((_Objetos == null))
                {
                    _Objetos = base.CreateObjectSet<Objeto>("Objetos");
                }
                return _Objetos;
            }
        }
        private ObjectSet<Objeto> _Objetos;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Categoria> Categorias
        {
            get
            {
                if ((_Categorias == null))
                {
                    _Categorias = base.CreateObjectSet<Categoria>("Categorias");
                }
                return _Categorias;
            }
        }
        private ObjectSet<Categoria> _Categorias;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Actividad> Actividades
        {
            get
            {
                if ((_Actividades == null))
                {
                    _Actividades = base.CreateObjectSet<Actividad>("Actividades");
                }
                return _Actividades;
            }
        }
        private ObjectSet<Actividad> _Actividades;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Meta> Metas
        {
            get
            {
                if ((_Metas == null))
                {
                    _Metas = base.CreateObjectSet<Meta>("Metas");
                }
                return _Metas;
            }
        }
        private ObjectSet<Meta> _Metas;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Objetivo> Objetivos
        {
            get
            {
                if ((_Objetivos == null))
                {
                    _Objetivos = base.CreateObjectSet<Objetivo>("Objetivos");
                }
                return _Objetivos;
            }
        }
        private ObjectSet<Objetivo> _Objetivos;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Tarea> Tareas
        {
            get
            {
                if ((_Tareas == null))
                {
                    _Tareas = base.CreateObjectSet<Tarea>("Tareas");
                }
                return _Tareas;
            }
        }
        private ObjectSet<Tarea> _Tareas;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<RolObjeto> RolObjetoEstablecer
        {
            get
            {
                if ((_RolObjetoEstablecer == null))
                {
                    _RolObjetoEstablecer = base.CreateObjectSet<RolObjeto>("RolObjetoEstablecer");
                }
                return _RolObjetoEstablecer;
            }
        }
        private ObjectSet<RolObjeto> _RolObjetoEstablecer;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<InstanciaComunidad> InstanciaComunidades
        {
            get
            {
                if ((_InstanciaComunidades == null))
                {
                    _InstanciaComunidades = base.CreateObjectSet<InstanciaComunidad>("InstanciaComunidades");
                }
                return _InstanciaComunidades;
            }
        }
        private ObjectSet<InstanciaComunidad> _InstanciaComunidades;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<InstanciaActor> InstanciaActores
        {
            get
            {
                if ((_InstanciaActores == null))
                {
                    _InstanciaActores = base.CreateObjectSet<InstanciaActor>("InstanciaActores");
                }
                return _InstanciaActores;
            }
        }
        private ObjectSet<InstanciaActor> _InstanciaActores;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<InstanciaRolActor> InstanciaRolesActor
        {
            get
            {
                if ((_InstanciaRolesActor == null))
                {
                    _InstanciaRolesActor = base.CreateObjectSet<InstanciaRolActor>("InstanciaRolesActor");
                }
                return _InstanciaRolesActor;
            }
        }
        private ObjectSet<InstanciaRolActor> _InstanciaRolesActor;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<InstanciaObjeto> InstanciaObjetos
        {
            get
            {
                if ((_InstanciaObjetos == null))
                {
                    _InstanciaObjetos = base.CreateObjectSet<InstanciaObjeto>("InstanciaObjetos");
                }
                return _InstanciaObjetos;
            }
        }
        private ObjectSet<InstanciaObjeto> _InstanciaObjetos;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<InstanciaCategoria> InstanciaCategorias
        {
            get
            {
                if ((_InstanciaCategorias == null))
                {
                    _InstanciaCategorias = base.CreateObjectSet<InstanciaCategoria>("InstanciaCategorias");
                }
                return _InstanciaCategorias;
            }
        }
        private ObjectSet<InstanciaCategoria> _InstanciaCategorias;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<InstanciaActividad> InstanciaActividades
        {
            get
            {
                if ((_InstanciaActividades == null))
                {
                    _InstanciaActividades = base.CreateObjectSet<InstanciaActividad>("InstanciaActividades");
                }
                return _InstanciaActividades;
            }
        }
        private ObjectSet<InstanciaActividad> _InstanciaActividades;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<InstanciaMeta> InstanciaMetas
        {
            get
            {
                if ((_InstanciaMetas == null))
                {
                    _InstanciaMetas = base.CreateObjectSet<InstanciaMeta>("InstanciaMetas");
                }
                return _InstanciaMetas;
            }
        }
        private ObjectSet<InstanciaMeta> _InstanciaMetas;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<InstanciaObjetivo> InstanciaObjetivos
        {
            get
            {
                if ((_InstanciaObjetivos == null))
                {
                    _InstanciaObjetivos = base.CreateObjectSet<InstanciaObjetivo>("InstanciaObjetivos");
                }
                return _InstanciaObjetivos;
            }
        }
        private ObjectSet<InstanciaObjetivo> _InstanciaObjetivos;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<InstanciaTarea> InstanciaTareas
        {
            get
            {
                if ((_InstanciaTareas == null))
                {
                    _InstanciaTareas = base.CreateObjectSet<InstanciaTarea>("InstanciaTareas");
                }
                return _InstanciaTareas;
            }
        }
        private ObjectSet<InstanciaTarea> _InstanciaTareas;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<InstanciaRolObjeto> InstanciaRolObjetos
        {
            get
            {
                if ((_InstanciaRolObjetos == null))
                {
                    _InstanciaRolObjetos = base.CreateObjectSet<InstanciaRolObjeto>("InstanciaRolObjetos");
                }
                return _InstanciaRolObjetos;
            }
        }
        private ObjectSet<InstanciaRolObjeto> _InstanciaRolObjetos;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Comunidades. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToComunidades(Comunidad comunidad)
        {
            base.AddObject("Comunidades", comunidad);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Actores. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToActores(Actor actor)
        {
            base.AddObject("Actores", actor);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Roles. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToRoles(RolActor rolActor)
        {
            base.AddObject("Roles", rolActor);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Reglas. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToReglas(Regla regla)
        {
            base.AddObject("Reglas", regla);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Objetos. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToObjetos(Objeto objeto)
        {
            base.AddObject("Objetos", objeto);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Categorias. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToCategorias(Categoria categoria)
        {
            base.AddObject("Categorias", categoria);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Actividades. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToActividades(Actividad actividad)
        {
            base.AddObject("Actividades", actividad);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Metas. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToMetas(Meta meta)
        {
            base.AddObject("Metas", meta);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Objetivos. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToObjetivos(Objetivo objetivo)
        {
            base.AddObject("Objetivos", objetivo);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Tareas. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToTareas(Tarea tarea)
        {
            base.AddObject("Tareas", tarea);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet RolObjetoEstablecer. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToRolObjetoEstablecer(RolObjeto rolObjeto)
        {
            base.AddObject("RolObjetoEstablecer", rolObjeto);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet InstanciaComunidades. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInstanciaComunidades(InstanciaComunidad instanciaComunidad)
        {
            base.AddObject("InstanciaComunidades", instanciaComunidad);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet InstanciaActores. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInstanciaActores(InstanciaActor instanciaActor)
        {
            base.AddObject("InstanciaActores", instanciaActor);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet InstanciaRolesActor. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInstanciaRolesActor(InstanciaRolActor instanciaRolActor)
        {
            base.AddObject("InstanciaRolesActor", instanciaRolActor);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet InstanciaObjetos. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInstanciaObjetos(InstanciaObjeto instanciaObjeto)
        {
            base.AddObject("InstanciaObjetos", instanciaObjeto);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet InstanciaCategorias. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInstanciaCategorias(InstanciaCategoria instanciaCategoria)
        {
            base.AddObject("InstanciaCategorias", instanciaCategoria);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet InstanciaActividades. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInstanciaActividades(InstanciaActividad instanciaActividad)
        {
            base.AddObject("InstanciaActividades", instanciaActividad);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet InstanciaMetas. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInstanciaMetas(InstanciaMeta instanciaMeta)
        {
            base.AddObject("InstanciaMetas", instanciaMeta);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet InstanciaObjetivos. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInstanciaObjetivos(InstanciaObjetivo instanciaObjetivo)
        {
            base.AddObject("InstanciaObjetivos", instanciaObjetivo);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet InstanciaTareas. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInstanciaTareas(InstanciaTarea instanciaTarea)
        {
            base.AddObject("InstanciaTareas", instanciaTarea);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet InstanciaRolObjetos. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInstanciaRolObjetos(InstanciaRolObjeto instanciaRolObjeto)
        {
            base.AddObject("InstanciaRolObjetos", instanciaRolObjeto);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Actividad")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actividad : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Actividad.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        /// <param name="meta_id">Valor inicial de la propiedad Meta_id.</param>
        public static Actividad CreateActividad(global::System.Int32 id, global::System.String atributos, global::System.Int32 meta_id)
        {
            Actividad actividad = new Actividad();
            actividad.id = id;
            actividad.atributos = atributos;
            actividad.Meta_id = meta_id;
            return actividad;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Meta_id
        {
            get
            {
                return _Meta_id;
            }
            set
            {
                OnMeta_idChanging(value);
                ReportPropertyChanging("Meta_id");
                _Meta_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Meta_id");
                OnMeta_idChanged();
            }
        }
        private global::System.Int32 _Meta_id;
        partial void OnMeta_idChanging(global::System.Int32 value);
        partial void OnMeta_idChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ActividadesDeLaComunidad", "Comunidad")]
        public Comunidad Comunidad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comunidad>("Model1.ActividadesDeLaComunidad", "Comunidad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comunidad>("Model1.ActividadesDeLaComunidad", "Comunidad").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Comunidad> ComunidadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comunidad>("Model1.ActividadesDeLaComunidad", "Comunidad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Comunidad>("Model1.ActividadesDeLaComunidad", "Comunidad", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "MetaDeLaActividad", "Meta")]
        public Meta Meta
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meta>("Model1.MetaDeLaActividad", "Meta").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meta>("Model1.MetaDeLaActividad", "Meta").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meta> MetaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meta>("Model1.MetaDeLaActividad", "Meta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meta>("Model1.MetaDeLaActividad", "Meta", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ActividaddeActor", "Actor")]
        public EntityCollection<Actor> Actor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actor>("Model1.ActividaddeActor", "Actor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actor>("Model1.ActividaddeActor", "Actor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Actor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actor : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Actor.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        /// <param name="categoria_id">Valor inicial de la propiedad Categoria_id.</param>
        /// <param name="actividad_id">Valor inicial de la propiedad Actividad_id.</param>
        public static Actor CreateActor(global::System.Int32 id, global::System.String atributos, global::System.Int32 categoria_id, global::System.Int32 actividad_id)
        {
            Actor actor = new Actor();
            actor.id = id;
            actor.atributos = atributos;
            actor.Categoria_id = categoria_id;
            actor.Actividad_id = actividad_id;
            return actor;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Categoria_id
        {
            get
            {
                return _Categoria_id;
            }
            set
            {
                OnCategoria_idChanging(value);
                ReportPropertyChanging("Categoria_id");
                _Categoria_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Categoria_id");
                OnCategoria_idChanged();
            }
        }
        private global::System.Int32 _Categoria_id;
        partial void OnCategoria_idChanging(global::System.Int32 value);
        partial void OnCategoria_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Actividad_id
        {
            get
            {
                return _Actividad_id;
            }
            set
            {
                OnActividad_idChanging(value);
                ReportPropertyChanging("Actividad_id");
                _Actividad_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Actividad_id");
                OnActividad_idChanged();
            }
        }
        private global::System.Int32 _Actividad_id;
        partial void OnActividad_idChanging(global::System.Int32 value);
        partial void OnActividad_idChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ComunidadActor", "Comunidad")]
        public Comunidad Comunidad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comunidad>("Model1.ComunidadActor", "Comunidad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comunidad>("Model1.ComunidadActor", "Comunidad").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Comunidad> ComunidadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comunidad>("Model1.ComunidadActor", "Comunidad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Comunidad>("Model1.ComunidadActor", "Comunidad", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriadeActor", "Categoria")]
        public Categoria Categoria
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categoria>("Model1.CategoriadeActor", "Categoria").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categoria>("Model1.CategoriadeActor", "Categoria").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categoria> CategoriaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categoria>("Model1.CategoriadeActor", "Categoria");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categoria>("Model1.CategoriadeActor", "Categoria", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ActividaddeActor", "Actividad")]
        public Actividad Actividad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actividad>("Model1.ActividaddeActor", "Actividad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actividad>("Model1.ActividaddeActor", "Actividad").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actividad> ActividadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actividad>("Model1.ActividaddeActor", "Actividad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actividad>("Model1.ActividaddeActor", "Actividad", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Categoria")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categoria : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Categoria.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        public static Categoria CreateCategoria(global::System.Int32 id, global::System.String atributos)
        {
            Categoria categoria = new Categoria();
            categoria.id = id;
            categoria.atributos = atributos;
            return categoria;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriaDeLaTarea", "Tarea")]
        public EntityCollection<Tarea> Tarea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tarea>("Model1.CategoriaDeLaTarea", "Tarea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tarea>("Model1.CategoriaDeLaTarea", "Tarea", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriadeObjeto", "Objeto")]
        public EntityCollection<Objeto> Objeto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Objeto>("Model1.CategoriadeObjeto", "Objeto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Objeto>("Model1.CategoriadeObjeto", "Objeto", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriadeActor", "Actor")]
        public EntityCollection<Actor> Actor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actor>("Model1.CategoriadeActor", "Actor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actor>("Model1.CategoriadeActor", "Actor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Comunidad")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comunidad : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Comunidad.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad Atributos.</param>
        public static Comunidad CreateComunidad(global::System.Int32 id, global::System.String atributos)
        {
            Comunidad comunidad = new Comunidad();
            comunidad.id = id;
            comunidad.Atributos = atributos;
            return comunidad;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Atributos
        {
            get
            {
                return _Atributos;
            }
            set
            {
                OnAtributosChanging(value);
                ReportPropertyChanging("Atributos");
                _Atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Atributos");
                OnAtributosChanged();
            }
        }
        private global::System.String _Atributos;
        partial void OnAtributosChanging(global::System.String value);
        partial void OnAtributosChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ComunidadActor", "Actor")]
        public EntityCollection<Actor> Actor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actor>("Model1.ComunidadActor", "Actor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actor>("Model1.ComunidadActor", "Actor", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ActividadesDeLaComunidad", "Actividad")]
        public EntityCollection<Actividad> Actividad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actividad>("Model1.ActividadesDeLaComunidad", "Actividad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actividad>("Model1.ActividadesDeLaComunidad", "Actividad", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="InstanciaActividad")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanciaActividad : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto InstanciaActividad.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        /// <param name="meta_id">Valor inicial de la propiedad Meta_id.</param>
        public static InstanciaActividad CreateInstanciaActividad(global::System.Int32 id, global::System.String atributos, global::System.Int32 meta_id)
        {
            InstanciaActividad instanciaActividad = new InstanciaActividad();
            instanciaActividad.id = id;
            instanciaActividad.atributos = atributos;
            instanciaActividad.Meta_id = meta_id;
            return instanciaActividad;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Meta_id
        {
            get
            {
                return _Meta_id;
            }
            set
            {
                OnMeta_idChanging(value);
                ReportPropertyChanging("Meta_id");
                _Meta_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Meta_id");
                OnMeta_idChanged();
            }
        }
        private global::System.Int32 _Meta_id;
        partial void OnMeta_idChanging(global::System.Int32 value);
        partial void OnMeta_idChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ActividadesDeLaComunidad1", "Comunidad1")]
        public InstanciaComunidad Comunidad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaComunidad>("Model1.ActividadesDeLaComunidad1", "Comunidad1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaComunidad>("Model1.ActividadesDeLaComunidad1", "Comunidad1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaComunidad> ComunidadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaComunidad>("Model1.ActividadesDeLaComunidad1", "Comunidad1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaComunidad>("Model1.ActividadesDeLaComunidad1", "Comunidad1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "MetaDeLaActividad1", "Meta1")]
        public InstanciaMeta Meta
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaMeta>("Model1.MetaDeLaActividad1", "Meta1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaMeta>("Model1.MetaDeLaActividad1", "Meta1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaMeta> MetaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaMeta>("Model1.MetaDeLaActividad1", "Meta1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaMeta>("Model1.MetaDeLaActividad1", "Meta1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "InstanciaActividadInstanciaActor", "InstanciaActor")]
        public EntityCollection<InstanciaActor> InstanciaActor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstanciaActor>("Model1.InstanciaActividadInstanciaActor", "InstanciaActor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstanciaActor>("Model1.InstanciaActividadInstanciaActor", "InstanciaActor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="InstanciaActor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanciaActor : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto InstanciaActor.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        /// <param name="rol_id">Valor inicial de la propiedad Rol_id.</param>
        /// <param name="categoria_id">Valor inicial de la propiedad Categoria_id.</param>
        /// <param name="instanciaActividad_id">Valor inicial de la propiedad InstanciaActividad_id.</param>
        public static InstanciaActor CreateInstanciaActor(global::System.Int32 id, global::System.String atributos, global::System.Int32 rol_id, global::System.Int32 categoria_id, global::System.Int32 instanciaActividad_id)
        {
            InstanciaActor instanciaActor = new InstanciaActor();
            instanciaActor.id = id;
            instanciaActor.atributos = atributos;
            instanciaActor.Rol_id = rol_id;
            instanciaActor.Categoria_id = categoria_id;
            instanciaActor.InstanciaActividad_id = instanciaActividad_id;
            return instanciaActor;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rol_id
        {
            get
            {
                return _Rol_id;
            }
            set
            {
                OnRol_idChanging(value);
                ReportPropertyChanging("Rol_id");
                _Rol_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rol_id");
                OnRol_idChanged();
            }
        }
        private global::System.Int32 _Rol_id;
        partial void OnRol_idChanging(global::System.Int32 value);
        partial void OnRol_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Categoria_id
        {
            get
            {
                return _Categoria_id;
            }
            set
            {
                OnCategoria_idChanging(value);
                ReportPropertyChanging("Categoria_id");
                _Categoria_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Categoria_id");
                OnCategoria_idChanged();
            }
        }
        private global::System.Int32 _Categoria_id;
        partial void OnCategoria_idChanging(global::System.Int32 value);
        partial void OnCategoria_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanciaActividad_id
        {
            get
            {
                return _InstanciaActividad_id;
            }
            set
            {
                OnInstanciaActividad_idChanging(value);
                ReportPropertyChanging("InstanciaActividad_id");
                _InstanciaActividad_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstanciaActividad_id");
                OnInstanciaActividad_idChanged();
            }
        }
        private global::System.Int32 _InstanciaActividad_id;
        partial void OnInstanciaActividad_idChanging(global::System.Int32 value);
        partial void OnInstanciaActividad_idChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ComunidadActor1", "Comunidad1")]
        public InstanciaComunidad Comunidad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaComunidad>("Model1.ComunidadActor1", "Comunidad1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaComunidad>("Model1.ComunidadActor1", "Comunidad1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaComunidad> ComunidadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaComunidad>("Model1.ComunidadActor1", "Comunidad1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaComunidad>("Model1.ComunidadActor1", "Comunidad1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriaDelActor1", "Categoria1")]
        public InstanciaCategoria Categoria
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaCategoria>("Model1.CategoriaDelActor1", "Categoria1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaCategoria>("Model1.CategoriaDelActor1", "Categoria1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaCategoria> CategoriaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaCategoria>("Model1.CategoriaDelActor1", "Categoria1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaCategoria>("Model1.CategoriaDelActor1", "Categoria1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "InstanciaActividadInstanciaActor", "InstanciaActividad")]
        public InstanciaActividad InstanciaActividad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaActividad>("Model1.InstanciaActividadInstanciaActor", "InstanciaActividad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaActividad>("Model1.InstanciaActividadInstanciaActor", "InstanciaActividad").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaActividad> InstanciaActividadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaActividad>("Model1.InstanciaActividadInstanciaActor", "InstanciaActividad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaActividad>("Model1.InstanciaActividadInstanciaActor", "InstanciaActividad", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="InstanciaCategoria")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanciaCategoria : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto InstanciaCategoria.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        public static InstanciaCategoria CreateInstanciaCategoria(global::System.Int32 id, global::System.String atributos)
        {
            InstanciaCategoria instanciaCategoria = new InstanciaCategoria();
            instanciaCategoria.id = id;
            instanciaCategoria.atributos = atributos;
            return instanciaCategoria;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriaDelActor1", "Actor1")]
        public EntityCollection<InstanciaActor> Actor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstanciaActor>("Model1.CategoriaDelActor1", "Actor1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstanciaActor>("Model1.CategoriaDelActor1", "Actor1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriaDeLaTarea1", "Tarea1")]
        public EntityCollection<InstanciaTarea> Tarea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstanciaTarea>("Model1.CategoriaDeLaTarea1", "Tarea1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstanciaTarea>("Model1.CategoriaDeLaTarea1", "Tarea1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriaDelObjeto1", "Objeto1")]
        public EntityCollection<InstanciaObjeto> Objeto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstanciaObjeto>("Model1.CategoriaDelObjeto1", "Objeto1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstanciaObjeto>("Model1.CategoriaDelObjeto1", "Objeto1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="InstanciaComunidad")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanciaComunidad : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto InstanciaComunidad.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad Atributos.</param>
        public static InstanciaComunidad CreateInstanciaComunidad(global::System.Int32 id, global::System.String atributos)
        {
            InstanciaComunidad instanciaComunidad = new InstanciaComunidad();
            instanciaComunidad.id = id;
            instanciaComunidad.Atributos = atributos;
            return instanciaComunidad;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Atributos
        {
            get
            {
                return _Atributos;
            }
            set
            {
                OnAtributosChanging(value);
                ReportPropertyChanging("Atributos");
                _Atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Atributos");
                OnAtributosChanged();
            }
        }
        private global::System.String _Atributos;
        partial void OnAtributosChanging(global::System.String value);
        partial void OnAtributosChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ComunidadActor1", "Actor1")]
        public EntityCollection<InstanciaActor> Actor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstanciaActor>("Model1.ComunidadActor1", "Actor1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstanciaActor>("Model1.ComunidadActor1", "Actor1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ActividadesDeLaComunidad1", "Actividad1")]
        public EntityCollection<InstanciaActividad> Actividad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstanciaActividad>("Model1.ActividadesDeLaComunidad1", "Actividad1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstanciaActividad>("Model1.ActividadesDeLaComunidad1", "Actividad1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="InstanciaMeta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanciaMeta : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto InstanciaMeta.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        public static InstanciaMeta CreateInstanciaMeta(global::System.Int32 id, global::System.String atributos)
        {
            InstanciaMeta instanciaMeta = new InstanciaMeta();
            instanciaMeta.id = id;
            instanciaMeta.atributos = atributos;
            return instanciaMeta;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "MetaDelObjetivo1", "Objetivo1")]
        public EntityCollection<InstanciaObjetivo> Objetivo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstanciaObjetivo>("Model1.MetaDelObjetivo1", "Objetivo1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstanciaObjetivo>("Model1.MetaDelObjetivo1", "Objetivo1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "MetaDeLaActividad1", "Actividad1")]
        public InstanciaActividad Actividad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaActividad>("Model1.MetaDeLaActividad1", "Actividad1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaActividad>("Model1.MetaDeLaActividad1", "Actividad1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaActividad> ActividadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaActividad>("Model1.MetaDeLaActividad1", "Actividad1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaActividad>("Model1.MetaDeLaActividad1", "Actividad1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="InstanciaObjetivo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanciaObjetivo : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto InstanciaObjetivo.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        /// <param name="meta_id">Valor inicial de la propiedad Meta_id.</param>
        public static InstanciaObjetivo CreateInstanciaObjetivo(global::System.Int32 id, global::System.String atributos, global::System.Int32 meta_id)
        {
            InstanciaObjetivo instanciaObjetivo = new InstanciaObjetivo();
            instanciaObjetivo.id = id;
            instanciaObjetivo.atributos = atributos;
            instanciaObjetivo.Meta_id = meta_id;
            return instanciaObjetivo;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Meta_id
        {
            get
            {
                return _Meta_id;
            }
            set
            {
                OnMeta_idChanging(value);
                ReportPropertyChanging("Meta_id");
                _Meta_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Meta_id");
                OnMeta_idChanged();
            }
        }
        private global::System.Int32 _Meta_id;
        partial void OnMeta_idChanging(global::System.Int32 value);
        partial void OnMeta_idChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "MetaDelObjetivo1", "Meta1")]
        public InstanciaMeta Meta
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaMeta>("Model1.MetaDelObjetivo1", "Meta1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaMeta>("Model1.MetaDelObjetivo1", "Meta1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaMeta> MetaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaMeta>("Model1.MetaDelObjetivo1", "Meta1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaMeta>("Model1.MetaDelObjetivo1", "Meta1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ObjetivoDeLaTarea1", "Tarea1")]
        public EntityCollection<InstanciaTarea> Tarea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstanciaTarea>("Model1.ObjetivoDeLaTarea1", "Tarea1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstanciaTarea>("Model1.ObjetivoDeLaTarea1", "Tarea1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="InstanciaObjeto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanciaObjeto : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto InstanciaObjeto.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        /// <param name="rol_id">Valor inicial de la propiedad Rol_id.</param>
        /// <param name="categoria_id">Valor inicial de la propiedad Categoria_id.</param>
        public static InstanciaObjeto CreateInstanciaObjeto(global::System.Int32 id, global::System.String atributos, global::System.Int32 rol_id, global::System.Int32 categoria_id)
        {
            InstanciaObjeto instanciaObjeto = new InstanciaObjeto();
            instanciaObjeto.id = id;
            instanciaObjeto.atributos = atributos;
            instanciaObjeto.Rol_id = rol_id;
            instanciaObjeto.Categoria_id = categoria_id;
            return instanciaObjeto;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rol_id
        {
            get
            {
                return _Rol_id;
            }
            set
            {
                OnRol_idChanging(value);
                ReportPropertyChanging("Rol_id");
                _Rol_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rol_id");
                OnRol_idChanged();
            }
        }
        private global::System.Int32 _Rol_id;
        partial void OnRol_idChanging(global::System.Int32 value);
        partial void OnRol_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Categoria_id
        {
            get
            {
                return _Categoria_id;
            }
            set
            {
                OnCategoria_idChanging(value);
                ReportPropertyChanging("Categoria_id");
                _Categoria_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Categoria_id");
                OnCategoria_idChanged();
            }
        }
        private global::System.Int32 _Categoria_id;
        partial void OnCategoria_idChanging(global::System.Int32 value);
        partial void OnCategoria_idChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriaDelObjeto1", "Categoria1")]
        public InstanciaCategoria Categoria
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaCategoria>("Model1.CategoriaDelObjeto1", "Categoria1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaCategoria>("Model1.CategoriaDelObjeto1", "Categoria1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaCategoria> CategoriaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaCategoria>("Model1.CategoriaDelObjeto1", "Categoria1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaCategoria>("Model1.CategoriaDelObjeto1", "Categoria1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ObjetosEnLaTarea1", "Tarea1")]
        public InstanciaTarea Tarea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaTarea>("Model1.ObjetosEnLaTarea1", "Tarea1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaTarea>("Model1.ObjetosEnLaTarea1", "Tarea1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaTarea> TareaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaTarea>("Model1.ObjetosEnLaTarea1", "Tarea1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaTarea>("Model1.ObjetosEnLaTarea1", "Tarea1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="InstanciaRolActor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanciaRolActor : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto InstanciaRolActor.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        public static InstanciaRolActor CreateInstanciaRolActor(global::System.Int32 id, global::System.String atributos)
        {
            InstanciaRolActor instanciaRolActor = new InstanciaRolActor();
            instanciaRolActor.id = id;
            instanciaRolActor.atributos = atributos;
            return instanciaRolActor;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "RolActorDeLaTarea1", "Tarea1")]
        public InstanciaTarea Tarea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaTarea>("Model1.RolActorDeLaTarea1", "Tarea1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaTarea>("Model1.RolActorDeLaTarea1", "Tarea1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaTarea> TareaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaTarea>("Model1.RolActorDeLaTarea1", "Tarea1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaTarea>("Model1.RolActorDeLaTarea1", "Tarea1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="InstanciaRolObjeto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanciaRolObjeto : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto InstanciaRolObjeto.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        public static InstanciaRolObjeto CreateInstanciaRolObjeto(global::System.Int32 id)
        {
            InstanciaRolObjeto instanciaRolObjeto = new InstanciaRolObjeto();
            instanciaRolObjeto.id = id;
            return instanciaRolObjeto;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "RolObjetoDeLaTarea1", "Tarea1")]
        public InstanciaTarea Tarea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaTarea>("Model1.RolObjetoDeLaTarea1", "Tarea1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaTarea>("Model1.RolObjetoDeLaTarea1", "Tarea1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaTarea> TareaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaTarea>("Model1.RolObjetoDeLaTarea1", "Tarea1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaTarea>("Model1.RolObjetoDeLaTarea1", "Tarea1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="InstanciaTarea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstanciaTarea : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto InstanciaTarea.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        /// <param name="objetivo_id">Valor inicial de la propiedad Objetivo_id.</param>
        /// <param name="categoria_id">Valor inicial de la propiedad Categoria_id.</param>
        public static InstanciaTarea CreateInstanciaTarea(global::System.Int32 id, global::System.String atributos, global::System.Int32 objetivo_id, global::System.Int32 categoria_id)
        {
            InstanciaTarea instanciaTarea = new InstanciaTarea();
            instanciaTarea.id = id;
            instanciaTarea.atributos = atributos;
            instanciaTarea.Objetivo_id = objetivo_id;
            instanciaTarea.Categoria_id = categoria_id;
            return instanciaTarea;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Objetivo_id
        {
            get
            {
                return _Objetivo_id;
            }
            set
            {
                OnObjetivo_idChanging(value);
                ReportPropertyChanging("Objetivo_id");
                _Objetivo_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Objetivo_id");
                OnObjetivo_idChanged();
            }
        }
        private global::System.Int32 _Objetivo_id;
        partial void OnObjetivo_idChanging(global::System.Int32 value);
        partial void OnObjetivo_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Categoria_id
        {
            get
            {
                return _Categoria_id;
            }
            set
            {
                OnCategoria_idChanging(value);
                ReportPropertyChanging("Categoria_id");
                _Categoria_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Categoria_id");
                OnCategoria_idChanged();
            }
        }
        private global::System.Int32 _Categoria_id;
        partial void OnCategoria_idChanging(global::System.Int32 value);
        partial void OnCategoria_idChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ObjetivoDeLaTarea1", "Objetivo1")]
        public InstanciaObjetivo Objetivo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaObjetivo>("Model1.ObjetivoDeLaTarea1", "Objetivo1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaObjetivo>("Model1.ObjetivoDeLaTarea1", "Objetivo1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaObjetivo> ObjetivoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaObjetivo>("Model1.ObjetivoDeLaTarea1", "Objetivo1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaObjetivo>("Model1.ObjetivoDeLaTarea1", "Objetivo1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriaDeLaTarea1", "Categoria1")]
        public InstanciaCategoria Categoria
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaCategoria>("Model1.CategoriaDeLaTarea1", "Categoria1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaCategoria>("Model1.CategoriaDeLaTarea1", "Categoria1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaCategoria> CategoriaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaCategoria>("Model1.CategoriaDeLaTarea1", "Categoria1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaCategoria>("Model1.CategoriaDeLaTarea1", "Categoria1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ObjetosEnLaTarea1", "Objeto1")]
        public EntityCollection<InstanciaObjeto> Objeto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstanciaObjeto>("Model1.ObjetosEnLaTarea1", "Objeto1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstanciaObjeto>("Model1.ObjetosEnLaTarea1", "Objeto1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "RolActorDeLaTarea1", "RolActor1")]
        public InstanciaRolActor RolActor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaRolActor>("Model1.RolActorDeLaTarea1", "RolActor1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaRolActor>("Model1.RolActorDeLaTarea1", "RolActor1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaRolActor> RolActorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaRolActor>("Model1.RolActorDeLaTarea1", "RolActor1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaRolActor>("Model1.RolActorDeLaTarea1", "RolActor1", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "RolObjetoDeLaTarea1", "RolObjeto1")]
        public InstanciaRolObjeto RolObjeto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaRolObjeto>("Model1.RolObjetoDeLaTarea1", "RolObjeto1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaRolObjeto>("Model1.RolObjetoDeLaTarea1", "RolObjeto1").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstanciaRolObjeto> RolObjetoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstanciaRolObjeto>("Model1.RolObjetoDeLaTarea1", "RolObjeto1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstanciaRolObjeto>("Model1.RolObjetoDeLaTarea1", "RolObjeto1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Meta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Meta : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Meta.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        public static Meta CreateMeta(global::System.Int32 id, global::System.String atributos)
        {
            Meta meta = new Meta();
            meta.id = id;
            meta.atributos = atributos;
            return meta;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "MetaDelObjetivo", "Objetivo")]
        public EntityCollection<Objetivo> Objetivo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Objetivo>("Model1.MetaDelObjetivo", "Objetivo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Objetivo>("Model1.MetaDelObjetivo", "Objetivo", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "MetaDeLaActividad", "Actividad")]
        public Actividad Actividad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actividad>("Model1.MetaDeLaActividad", "Actividad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actividad>("Model1.MetaDeLaActividad", "Actividad").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actividad> ActividadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actividad>("Model1.MetaDeLaActividad", "Actividad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actividad>("Model1.MetaDeLaActividad", "Actividad", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Objetivo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Objetivo : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Objetivo.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        /// <param name="meta_id">Valor inicial de la propiedad Meta_id.</param>
        public static Objetivo CreateObjetivo(global::System.Int32 id, global::System.String atributos, global::System.Int32 meta_id)
        {
            Objetivo objetivo = new Objetivo();
            objetivo.id = id;
            objetivo.atributos = atributos;
            objetivo.Meta_id = meta_id;
            return objetivo;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Meta_id
        {
            get
            {
                return _Meta_id;
            }
            set
            {
                OnMeta_idChanging(value);
                ReportPropertyChanging("Meta_id");
                _Meta_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Meta_id");
                OnMeta_idChanged();
            }
        }
        private global::System.Int32 _Meta_id;
        partial void OnMeta_idChanging(global::System.Int32 value);
        partial void OnMeta_idChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "MetaDelObjetivo", "Meta")]
        public Meta Meta
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meta>("Model1.MetaDelObjetivo", "Meta").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meta>("Model1.MetaDelObjetivo", "Meta").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meta> MetaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meta>("Model1.MetaDelObjetivo", "Meta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meta>("Model1.MetaDelObjetivo", "Meta", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ObjetivoDeLaTarea", "Tarea")]
        public EntityCollection<Tarea> Tarea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tarea>("Model1.ObjetivoDeLaTarea", "Tarea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tarea>("Model1.ObjetivoDeLaTarea", "Tarea", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Objeto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Objeto : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Objeto.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        /// <param name="categoria_id">Valor inicial de la propiedad Categoria_id.</param>
        public static Objeto CreateObjeto(global::System.Int32 id, global::System.String atributos, global::System.Int32 categoria_id)
        {
            Objeto objeto = new Objeto();
            objeto.id = id;
            objeto.atributos = atributos;
            objeto.Categoria_id = categoria_id;
            return objeto;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Categoria_id
        {
            get
            {
                return _Categoria_id;
            }
            set
            {
                OnCategoria_idChanging(value);
                ReportPropertyChanging("Categoria_id");
                _Categoria_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Categoria_id");
                OnCategoria_idChanged();
            }
        }
        private global::System.Int32 _Categoria_id;
        partial void OnCategoria_idChanging(global::System.Int32 value);
        partial void OnCategoria_idChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ObjetosEnLaTarea", "Tarea")]
        public Tarea Tarea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tarea>("Model1.ObjetosEnLaTarea", "Tarea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tarea>("Model1.ObjetosEnLaTarea", "Tarea").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tarea> TareaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tarea>("Model1.ObjetosEnLaTarea", "Tarea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tarea>("Model1.ObjetosEnLaTarea", "Tarea", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriadeObjeto", "Categoria")]
        public Categoria Categoria
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categoria>("Model1.CategoriadeObjeto", "Categoria").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categoria>("Model1.CategoriadeObjeto", "Categoria").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categoria> CategoriaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categoria>("Model1.CategoriadeObjeto", "Categoria");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categoria>("Model1.CategoriadeObjeto", "Categoria", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Regla")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Regla : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Regla.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        public static Regla CreateRegla(global::System.Int32 id, global::System.String atributos)
        {
            Regla regla = new Regla();
            regla.id = id;
            regla.atributos = atributos;
            return regla;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="RolActor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RolActor : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto RolActor.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        public static RolActor CreateRolActor(global::System.Int32 id, global::System.String atributos)
        {
            RolActor rolActor = new RolActor();
            rolActor.id = id;
            rolActor.atributos = atributos;
            return rolActor;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="RolObjeto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RolObjeto : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto RolObjeto.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        public static RolObjeto CreateRolObjeto(global::System.Int32 id, global::System.String atributos)
        {
            RolObjeto rolObjeto = new RolObjeto();
            rolObjeto.id = id;
            rolObjeto.atributos = atributos;
            return rolObjeto;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "RolObjetodeTarea", "Tarea")]
        public EntityCollection<Tarea> Tarea_id
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tarea>("Model1.RolObjetodeTarea", "Tarea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tarea>("Model1.RolObjetodeTarea", "Tarea", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Tarea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tarea : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Tarea.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad id.</param>
        /// <param name="atributos">Valor inicial de la propiedad atributos.</param>
        /// <param name="objetivo_id">Valor inicial de la propiedad Objetivo_id.</param>
        /// <param name="categoria_id">Valor inicial de la propiedad Categoria_id.</param>
        /// <param name="rolObjeto_id">Valor inicial de la propiedad RolObjeto_id.</param>
        /// <param name="rolActor_id">Valor inicial de la propiedad RolActor_id.</param>
        public static Tarea CreateTarea(global::System.Int32 id, global::System.String atributos, global::System.Int32 objetivo_id, global::System.Int32 categoria_id, global::System.Int32 rolObjeto_id, global::System.Int32 rolActor_id)
        {
            Tarea tarea = new Tarea();
            tarea.id = id;
            tarea.atributos = atributos;
            tarea.Objetivo_id = objetivo_id;
            tarea.Categoria_id = categoria_id;
            tarea.RolObjeto_id = rolObjeto_id;
            tarea.RolActor_id = rolActor_id;
            return tarea;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String atributos
        {
            get
            {
                return _atributos;
            }
            set
            {
                OnatributosChanging(value);
                ReportPropertyChanging("atributos");
                _atributos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("atributos");
                OnatributosChanged();
            }
        }
        private global::System.String _atributos;
        partial void OnatributosChanging(global::System.String value);
        partial void OnatributosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Objetivo_id
        {
            get
            {
                return _Objetivo_id;
            }
            set
            {
                OnObjetivo_idChanging(value);
                ReportPropertyChanging("Objetivo_id");
                _Objetivo_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Objetivo_id");
                OnObjetivo_idChanged();
            }
        }
        private global::System.Int32 _Objetivo_id;
        partial void OnObjetivo_idChanging(global::System.Int32 value);
        partial void OnObjetivo_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Categoria_id
        {
            get
            {
                return _Categoria_id;
            }
            set
            {
                OnCategoria_idChanging(value);
                ReportPropertyChanging("Categoria_id");
                _Categoria_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Categoria_id");
                OnCategoria_idChanged();
            }
        }
        private global::System.Int32 _Categoria_id;
        partial void OnCategoria_idChanging(global::System.Int32 value);
        partial void OnCategoria_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolObjeto_id
        {
            get
            {
                return _RolObjeto_id;
            }
            set
            {
                OnRolObjeto_idChanging(value);
                ReportPropertyChanging("RolObjeto_id");
                _RolObjeto_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RolObjeto_id");
                OnRolObjeto_idChanged();
            }
        }
        private global::System.Int32 _RolObjeto_id;
        partial void OnRolObjeto_idChanging(global::System.Int32 value);
        partial void OnRolObjeto_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolActor_id
        {
            get
            {
                return _RolActor_id;
            }
            set
            {
                OnRolActor_idChanging(value);
                ReportPropertyChanging("RolActor_id");
                _RolActor_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RolActor_id");
                OnRolActor_idChanged();
            }
        }
        private global::System.Int32 _RolActor_id;
        partial void OnRolActor_idChanging(global::System.Int32 value);
        partial void OnRolActor_idChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ObjetivoDeLaTarea", "Objetivo")]
        public Objetivo Objetivo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Objetivo>("Model1.ObjetivoDeLaTarea", "Objetivo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Objetivo>("Model1.ObjetivoDeLaTarea", "Objetivo").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Objetivo> ObjetivoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Objetivo>("Model1.ObjetivoDeLaTarea", "Objetivo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Objetivo>("Model1.ObjetivoDeLaTarea", "Objetivo", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CategoriaDeLaTarea", "Categoria")]
        public Categoria Categoria
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categoria>("Model1.CategoriaDeLaTarea", "Categoria").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categoria>("Model1.CategoriaDeLaTarea", "Categoria").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categoria> CategoriaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categoria>("Model1.CategoriaDeLaTarea", "Categoria");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categoria>("Model1.CategoriaDeLaTarea", "Categoria", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ObjetosEnLaTarea", "Objeto")]
        public EntityCollection<Objeto> Objeto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Objeto>("Model1.ObjetosEnLaTarea", "Objeto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Objeto>("Model1.ObjetosEnLaTarea", "Objeto", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "RolObjetodeTarea", "RolObjeto")]
        public RolObjeto RolObjeto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RolObjeto>("Model1.RolObjetodeTarea", "RolObjeto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RolObjeto>("Model1.RolObjetodeTarea", "RolObjeto").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RolObjeto> RolObjetoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RolObjeto>("Model1.RolObjetodeTarea", "RolObjeto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RolObjeto>("Model1.RolObjetodeTarea", "RolObjeto", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "RolActordeTarea", "RolActor")]
        public RolActor RolActor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RolActor>("Model1.RolActordeTarea", "RolActor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RolActor>("Model1.RolActordeTarea", "RolActor").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RolActor> RolActorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RolActor>("Model1.RolActordeTarea", "RolActor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RolActor>("Model1.RolActordeTarea", "RolActor", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
